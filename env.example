# ============================================
# HANG.FM BOT - CONFIGURATION HUB
# ============================================
# Copy this file to .env and fill in your values
# cp env.example .env
#
# REQUIRED fields are marked with [REQUIRED]
# OPTIONAL fields have default values shown
#
# Get credentials from:
# - Hang.fm API Token: Browser DevTools → Application → Local Storage → tt.live
# - CometChat Auth: Same location as API token
# - AI API Keys: See links in each section below
# ============================================

# ============================================
# 1️⃣ HANG.FM PLATFORM CONNECTION [REQUIRED]
# ============================================
# Socket.IO base URL for hang.fm real-time events
TTFM_SOCKET_BASE_URL=https://socket.prod.tt.fm

# Your hang.fm API token (JWT from browser)
# Where to find: DevTools → Application → Local Storage → tt.live → "token"
TTFM_API_TOKEN=your_jwt_token_here

# Room UUID you want the bot to join
# Where to find: In room URL → https://hang.fm/r/YOUR-ROOM-SLUG → copy UUID from browser console
ROOM_UUID=your_room_uuid_here

# Bot's display name in chat
BOT_NAME=BOT

# ============================================
# 2️⃣ COMETCHAT (CHAT MESSAGES) [REQUIRED]
# ============================================
# CometChat App ID for hang.fm (same for all users)
COMETCHAT_APPID=193427bb5702bab7

# Your CometChat API key (same as App ID for hang.fm)
COMETCHAT_API_KEY=193427bb5702bab7

# CometChat region (US for hang.fm)
COMETCHAT_REGION=us

# Your bot's CometChat user ID (UUID)
# Where to find: Same as your hang.fm user UUID
COMETCHAT_UID=your_bot_uuid

# CometChat auth token
# Where to find: DevTools → Application → Local Storage → tt.live → "cometchat_auth"
COMETCHAT_AUTH=your_auth_token

# ============================================
# 3️⃣ PERMISSIONS (USER ROLES) [REQUIRED]
# ============================================
# Control who can use admin commands

# Co-owners: Full bot access (/.ai, /.grant, all admin commands)
# Format: Comma-separated UUIDs
# Where to find UUIDs: Bot logs when users chat, or check room settings
COOWNER_UUIDS=uuid1,uuid2,uuid3

# Moderators: Kick, ban, track commands
# Format: Comma-separated UUIDs
MODERATOR_UUIDS=uuid4,uuid5

# ============================================
# 4️⃣ BOT AI SYSTEM PROMPT [WIP - NOT ACTIVE YET]
# ============================================
# 🚧 WORK IN PROGRESS - Custom prompt feature under discussion
# 
# CURRENT STATUS:
# Bot currently uses our hardcoded default prompt (defined in ai_manager.py)
# This BOT_SYSTEM_PROMPT variable is not being used yet
# 
# PLANNED FEATURE:
# When implemented, you'll be able to write your ENTIRE AI prompt here
# - Write your prompt on ONE line
# - Use \n for line breaks
# - Include personality, rules, tone - anything you want!
#
# EXAMPLE (Pirate Bot):
# BOT_SYSTEM_PROMPT=You're a pirate bot. Talk like a sailor.\n\nRULES:\n- Always say 'arr matey'\n- Keep it nautical\n- Be entertaining
#
# EXAMPLE (Professional Bot):
# BOT_SYSTEM_PROMPT=You're a professional music curator.\n\nRULES:\n- Be polite and helpful\n- Use proper grammar\n- Keep responses concise
#
# OUR CURRENT DEFAULT PROMPT (hardcoded):
# - Chill, laid-back personality
# - 2-3 sentence max responses
# - No questions back
# - Creative and fun, not literal
# - Swears when it fits
# - Pop culture references
# - Roasts back when users are rude (goofy intelligent way)
#
# The bot ALWAYS auto-adds:
# - Current AI model info
# - User sentiment adaptation (friendly/roasting/neutral)
# - Room context (current song, DJs, users)
#
# For now, leave this empty (not implemented yet):
BOT_SYSTEM_PROMPT=

# ============================================
# 5️⃣ AI PROVIDERS [REQUIRED - AT LEAST ONE]
# ============================================
# Priority order: Gemini → OpenAI → Claude → HuggingFace
# Bot will try providers in order until one works
# You only need ONE provider, but more = better fallback

# ──────────────────────────────────────────
# Google Gemini - PRIMARY (Recommended)
# ──────────────────────────────────────────
# Free Tier: 60 requests/min, 1,500 requests/day - NO CREDIT CARD NEEDED
# Models: gemini-2.5-flash (fast), gemini-2.5-pro (smart), gemini-1.5-flash (balanced)
# Get API Key: https://aistudio.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here
GEMINI_MODEL=gemini-2.5-flash

# ──────────────────────────────────────────
# OpenAI GPT - FALLBACK #1
# ──────────────────────────────────────────
# Free Tier: $5 credit for new accounts (expires after 3 months)
# Pay-as-you-go after free tier (gpt-4o-mini is cheapest)
# Models: gpt-4o (best), gpt-4o-mini (fast/cheap), gpt-3.5-turbo (legacy)
# Get API Key: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-4o-mini

# ──────────────────────────────────────────
# Anthropic Claude - FALLBACK #2
# ──────────────────────────────────────────
# Free Tier: $5 credit for new accounts
# Pay-as-you-go after (Claude 3.5 Haiku is cheapest)
# Models: claude-3-5-sonnet-20241022 (best), claude-3-5-haiku-20241022 (fast)
# Get API Key: https://console.anthropic.com/settings/keys
ANTHROPIC_API_KEY=your_claude_api_key_here
ANTHROPIC_MODEL=claude-3-5-sonnet-20241022

# ──────────────────────────────────────────
# HuggingFace - FALLBACK #3 (Best Free Option)
# ──────────────────────────────────────────
# Free Tier: 1,000 requests/day PER MODEL - NO CREDIT CARD NEEDED
# Strategy: Use multiple models to multiply your free tokens!
# 2 models = 2,000 requests/day, 4 models = 4,000 requests/day
# Best models: mistralai/Mistral-7B-Instruct-v0.3, mistralai/Mixtral-8x7B-Instruct-v0.1
# Get API Key: https://huggingface.co/settings/tokens
HUGGINGFACE_API_KEY=your_huggingface_api_key_here
HUGGINGFACE_MODELS=mistralai/Mistral-7B-Instruct-v0.3,mistralai/Mixtral-8x7B-Instruct-v0.1

# ============================================
# 6️⃣ MUSIC DISCOVERY SYSTEM [OPTIONAL]
# ============================================
# Required for future music discovery features
# Leave blank if you don't need music discovery yet

# ──────────────────────────────────────────
# Discogs API (Genre Classification)
# ──────────────────────────────────────────
# Free, no limits
# Get Token: https://www.discogs.com/settings/developers → Generate Token
DISCOGS_USER_TOKEN=your_discogs_token_here
DISCOGS_USER_AGENT=HangFmBot/1.0

# ──────────────────────────────────────────
# Spotify API (Track Discovery)
# ──────────────────────────────────────────
# Free, no limits (for basic API calls)
# Get Credentials: https://developer.spotify.com/dashboard → Create App
SPOTIFY_CLIENT_ID=your_spotify_client_id
SPOTIFY_CLIENT_SECRET=your_spotify_client_secret

# ──────────────────────────────────────────
# Music Selection Settings
# ──────────────────────────────────────────
# Year range for music discovery
MUSIC_YEAR_START=1950
MUSIC_YEAR_END=2025

# How many recently played songs to track
RECENTLY_PLAYED_LIMIT=50

# ============================================
# 7️⃣ ADVANCED SETTINGS [OPTIONAL]
# ============================================
# Fine-tune bot behavior - only change if needed

# ──────────────────────────────────────────
# Logging
# ──────────────────────────────────────────
# Options: DEBUG (verbose), INFO (normal), WARNING (quiet), ERROR (errors only)
LOG_LEVEL=INFO

# Show detailed event data structures (for debugging)
# true = show data keys, false = hide
ALLOW_DEBUG=false

# ──────────────────────────────────────────
# Rate Limiting
# ──────────────────────────────────────────
# Messages per second (prevents spam)
SEND_RATE_PER_SEC=2

# How often to poll CometChat for new messages (milliseconds)
HTTP_POLL_INTERVAL_MS=1000

# ============================================
# 📖 CONFIGURATION COMPLETE
# ============================================
# Save this file as .env and run: .\START-BOT.bat
#
# Need help? Check README.md for:
# - Where to find credentials
# - How to get API keys
# - Troubleshooting common issues
# ============================================
